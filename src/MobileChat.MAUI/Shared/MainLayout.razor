@using MobileChat.MAUI.Services
@using jihadkhawaja.mobilechat.client.Interfaces;
@inherits LayoutComponentBase
@inject SessionStorage SessionStorage
@inject IChatUser ChatUserService

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    @if (!IsConnected)
    {
        <div style="width:100vw;height:100vh;background-color:#27272fff">
            <MudProgressLinear Indeterminate Color="Color.Primary" />
            <MudText Typo="Typo.h6" Align="Align.Center" Color="Color.Primary" Class="pa-10">Connecting to server</MudText>
        </div>

        return;
    }

    @if (SessionStorage.User is not null)
    {
        <MudAppBar Elevation="0">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudSpacer />
            <MudAvatar Color="Color.Primary">@SessionStorage.User.Username?.ToUpper()[0]</MudAvatar>
            <MudText Class="ml-4">@SessionStorage.User.Username</MudText>
        </MudAppBar>
        <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6">Mobile Chat</MudText>
            </MudDrawerHeader>
            <NavMenu />
        </MudDrawer>
    }
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider;

    bool _drawerOpen = true;

    private bool IsConnected { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //_isDarkMode = await _mudThemeProvider.GetSystemPreference();
            _isDarkMode = true;

            while(!IsConnected)
            {
                IsConnected = GetIsConnected();
                await Task.Delay(300);
            }

            if (SessionStorage.User is not null && SessionStorage.User.Id != Guid.Empty)
            {
                SessionStorage.User.DisplayName = await ChatUserService.GetUserDisplayName(SessionStorage.User.Id);
                SessionStorage.User.Username = await ChatUserService.GetUserUsername(SessionStorage.User.Id);
            }

            await InvokeAsync(StateHasChanged);
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private bool GetIsConnected()
    {
        if (jihadkhawaja.mobilechat.client.MobileChat.SignalR.HubConnection.State == Microsoft.AspNetCore.SignalR.Client.HubConnectionState.Connected)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}